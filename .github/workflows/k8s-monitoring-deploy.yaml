name: k8s-monitoring-deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - k8sevents-values.yaml
      - kubeletstats-values.yaml

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
  HONEYCOMB_API_ENDPOINT: ${{ vars.HONEYCOMB_API_ENDPOINT }}
permissions:
  id-token: write # This is required for requesting the JWT

jobs:
  k8s-monitoring-deploy:
    # don't run when creating the repo from this template
    if: github.run_number != 1
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Validate and set secrets
        run: |
          if [[ "${{ env.AWS_REGION }}" == "eu-west-1" ]]; then
            if [[ -z "${{ secrets.AWS_GH_EKS_ROLE_EU }}" ]] || [[ -z "${{ secrets.ACM_ARN_EU }}" ]] || [[ -z "${{ secrets.DNS_NAME_EU }}" ]]; then
              echo "Required EU secrets are not set"
              exit 1
            fi
            echo "SELECTED_EKS_ROLE=${{ secrets.AWS_GH_EKS_ROLE_EU }}" >> $GITHUB_ENV
          elif [[ "${{ env.AWS_REGION }}" == "us-east-1" ]]; then
            if [[ -z "${{ secrets.AWS_GH_EKS_ROLE }}" ]] || [[ -z "${{ secrets.ACM_ARN }}" ]] || [[ -z "${{ secrets.DNS_NAME }}" ]]; then
              echo "Required US secrets are not set"
              exit 1
            fi
            echo "SELECTED_EKS_ROLE=${{ secrets.AWS_GH_EKS_ROLE }}" >> $GITHUB_ENV
          else
            echo "Invalid AWS_REGION: ${{ env.AWS_REGION }}"
            exit 1
          fi

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.SELECTED_EKS_ROLE }}
          role-session-name: ci-run-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}  --kubeconfig ./kubeconfig
          echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
          echo $(cat ./kubeconfig | base64) >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: k8s manifest deploy
        uses: koslib/helm-eks-action@master
        env:
          KUBE_CONFIG_DATA: ${{ env.KUBE_CONFIG_DATA }}
        with:
          command: |
            helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts
            helm repo update
            helm upgrade -n ${{vars.K8S_NAMESPACE}} --install ${{vars.K8S_NAMESPACE}}-otelcol-kubeletstats open-telemetry/opentelemetry-collector -f kubeletstats-values.yaml \ 
            --set config.exporters.otlp.endpoint="${{ env.HONEYCOMB_API_ENDPOINT }}:443" \
            --wait --debug
            helm upgrade -n ${{vars.K8S_NAMESPACE}} --install ${{vars.K8S_NAMESPACE}}-otelcol-k8sevents open-telemetry/opentelemetry-collector -f k8sevents-values.yaml \
            --set config.exporters.otlp.endpoint="${{ env.HONEYCOMB_API_ENDPOINT }}:443" \
            --wait --debug
